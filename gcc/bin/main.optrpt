Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Begin optimization report for: main(short, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/debug.h(18,2) inlined into ../src/main.cpp(21,2)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15389: vectorization support: reference aaaa has unaligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.720
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(18,2) inlined into ../src/main.cpp(21,2)
<Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15416: vectorization support: scatter was generated for the variable bbbb:  unit-strided, element aligned   [ ../src/debug.h(17,13) ]
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.500 
   remark #15478: estimated potential speedup: 7.190 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/debug.h(18,2) inlined into ../src/main.cpp(21,2)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(18,2) inlined into ../src/main.cpp(21,2)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/debug.h(21,2) inlined into ../src/main.cpp(21,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/debug.h(22,3) inlined into ../src/main.cpp(21,2)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/debug.h(24,4) inlined into ../src/main.cpp(21,2)
      <Multiversioned v1>
         remark #15389: vectorization support: reference nnew.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15416: vectorization support: scatter was generated for the variable nnew.11723:  unit-strided, element aligned   [ ../src/debug.h(27,5) ]
         remark #15415: vectorization support: gather was generated for the variable old.11723:  unit-strided, element aligned   [ ../src/debug.h(27,15) ]
         remark #15415: vectorization support: gather was generated for the variable old.11723:  unit-strided, element aligned   [ ../src/debug.h(27,15) ]
         remark #15415: vectorization support: gather was generated for the variable instance:  strided by 159   [ ../src/debug.h(27,36) ]
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 0.077
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15460: masked strided loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 23 
         remark #15477: vector loop cost: 2.430 
         remark #15478: estimated potential speedup: 5.680 
         remark #15487: type converts: 5 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/debug.h(24,4) inlined into ../src/main.cpp(21,2)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference nnew.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference nnew.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old.11723 has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.304
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/debug.h(24,4) inlined into ../src/main.cpp(21,2)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: main0(short, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/debug.h(18,2)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15389: vectorization support: reference aaaa has unaligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.720
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(18,2)
<Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15416: vectorization support: scatter was generated for the variable bbbb:  unit-strided, element aligned   [ ../src/debug.h(17,13) ]
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.500 
   remark #15478: estimated potential speedup: 7.190 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/debug.h(18,2)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(19,10) ]
   remark #15388: vectorization support: reference aaaa has aligned access   [ ../src/debug.h(19,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(18,2)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../src/debug.h(21,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../src/debug.h(22,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../src/debug.h(24,4)
      <Multiversioned v1>
         remark #15389: vectorization support: reference nnew has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15416: vectorization support: scatter was generated for the variable nnew:  unit-strided, element aligned   [ ../src/debug.h(27,5) ]
         remark #15415: vectorization support: gather was generated for the variable old:  unit-strided, element aligned   [ ../src/debug.h(27,15) ]
         remark #15415: vectorization support: gather was generated for the variable old:  unit-strided, element aligned   [ ../src/debug.h(27,15) ]
         remark #15415: vectorization support: gather was generated for the variable instance:  strided by 159   [ ../src/debug.h(27,36) ]
         remark #15305: vectorization support: vector length 32
         remark #15309: vectorization support: normalized vectorization overhead 0.077
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15460: masked strided loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 23 
         remark #15477: vector loop cost: 2.430 
         remark #15478: estimated potential speedup: 5.680 
         remark #15487: type converts: 5 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../src/debug.h(24,4)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15389: vectorization support: reference nnew has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference nnew has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15389: vectorization support: reference old has unaligned access   [ ../src/debug.h(27,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 16
         remark #15309: vectorization support: normalized vectorization overhead 0.304
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../src/debug.h(24,4)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: non_main0(short, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/debug.h(39,2)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference bbbb has unaligned access   [ ../src/debug.h(40,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(39,2)
   remark #15388: vectorization support: reference bbbb has aligned access   [ ../src/debug.h(40,3) ]
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 2.400
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.150 
   remark #15478: estimated potential speedup: 10.750 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/debug.h(39,2)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference bbbb has aligned access   [ ../src/debug.h(40,3) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/debug.h(42,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/debug.h(43,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/debug.h(44,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between bbbb line 45 and bbbb line 45
         remark #15346: vector dependence: assumed ANTI dependence between bbbb line 45 and bbbb line 45
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: new_one_grasp_interation(short, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/new_grasp.h(14,2)
   remark #15388: vectorization support: reference permuation has aligned access   [ ../src/new_grasp.h(14,41) ]
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 0.400
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.150 
   remark #15478: estimated potential speedup: 10.520 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/new_grasp.h(14,2)
LOOP END

LOOP BEGIN at ../src/new_grasp.h(14,2)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference permuation has aligned access   [ ../src/new_grasp.h(14,41) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/new_grasp.h(17,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/new_grasp.h(19,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/new_grasp.h(24,4)
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/new_grasp.h(35,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/new_grasp.h(36,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between permuation line 39 and permuation line 39
         remark #15346: vector dependence: assumed FLOW dependence between permuation line 39 and permuation line 39
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/new_grasp.h(46,4)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../src/new_grasp.h(59,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/new_grasp.h(62,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/new_grasp.h(63,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between permuation line 66 and permuation line 74
         remark #15346: vector dependence: assumed FLOW dependence between permuation line 74 and permuation line 66
      LOOP END

      LOOP BEGIN at ../src/new_grasp.h(63,3)
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: classic_one_grasp_interation(short, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/classic_grasp.h(20,2)
   remark #15388: vectorization support: reference permuation has aligned access   [ ../src/classic_grasp.h(20,41) ]
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 0.400
   remark #15300: LOOP WAS VECTORIZED
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.150 
   remark #15478: estimated potential speedup: 10.520 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../src/classic_grasp.h(20,2)
LOOP END

LOOP BEGIN at ../src/classic_grasp.h(20,2)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference permuation has aligned access   [ ../src/classic_grasp.h(20,41) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.444
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../src/classic_grasp.h(23,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/classic_grasp.h(25,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/classic_grasp.h(30,4)
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
      LOOP END

      LOOP BEGIN at ../src/classic_grasp.h(32,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/classic_grasp.h(33,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between bbbb line 34 and bbbb line 34
            remark #15346: vector dependence: assumed ANTI dependence between bbbb line 34 and bbbb line 34
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/classic_grasp.h(39,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/classic_grasp.h(40,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between permuation line 43 and permuation line 43
         remark #15346: vector dependence: assumed FLOW dependence between permuation line 43 and permuation line 43
      LOOP END
   LOOP END

   LOOP BEGIN at ../src/classic_grasp.h(50,4)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../src/classic_grasp.h(63,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/classic_grasp.h(66,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at ../src/classic_grasp.h(67,3)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at ../src/classic_grasp.h(72,4)
            remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
         LOOP END

         LOOP BEGIN at ../src/classic_grasp.h(73,4)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at ../src/classic_grasp.h(74,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization
               remark #15346: vector dependence: assumed FLOW dependence between bbbb line 75 and bbbb line 75
               remark #15346: vector dependence: assumed ANTI dependence between bbbb line 75 and bbbb line 75
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: classic_init(short)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../src/classic_grasp.h(10,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../src/classic_grasp.h(11,3)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================
